{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/SuperButton.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/Affairs.module.css"],"names":["module","exports","Header","Message","props","id","classes","post","src","avatar","alt","bubble","text","name","time","message","messageData","HW1","Affair","className","styles","affair","onClick","deleteAffairCallback","_id","priority","SuperButton","red","restProps","finalClassName","Affairs","mappedAffairs","data","map","a","wrapper","affairs","btns","btn","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","errorStyle","border","container","field","inputLine","value","placeholder","onChange","onKeyPress","event","key","style","line","rest","GreetingContainer","users","addUserCallback","setName","setError","currentTarget","alert","length","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","finalSpanClassName","s","finalInputClassName","errorInput","superInput","lbl","e","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","setChecked","showAlert","column","blue","disabled","PreJunior","Error404","PATH","Routes","path","exact","render","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7d8c924e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__w1oDv\",\"text\":\"Message_text__2mSlm\",\"bubble\":\"Message_bubble__1dKFe\",\"name\":\"Message_name__3JURe\",\"time\":\"Message_time__1vdEc\",\"message\":\"Message_message__2gW2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__-B8rQ\",\"line\":\"Greeting_line__3vEK7\",\"rest\":\"Greeting_rest__2utxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lbl\":\"SuperInputText_lbl__1yPTv\",\"superInput\":\"SuperInputText_superInput__10h-2\",\"errorInput\":\"SuperInputText_errorInput__38F4t\",\"error\":\"SuperInputText_error__1CyHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1tQXe\",\"column\":\"HW4_column__-Dbse\",\"testSpanError\":\"HW4_testSpanError__Iiv7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1eHYm\",\"red\":\"SuperButton_red__3k-gW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__31khY\",\"spanClassName\":\"SuperCheckbox_spanClassName__2V5bU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2sSXn\"};","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport classes from './Message.module.css';\n\ntype MessagePropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\nexport const Message = (props: MessagePropsType) => {\n    return (\n        <div id={classes.post}>\n            <img src={props.avatar} alt={'not available'}/>\n            <div id={classes.bubble}></div>\n            <div id={classes.text}>\n                <div id={classes.name}>{props.name}</div>\n                <div id={classes.time}>{props.time}</div>\n                <div id={classes.message}>{props.message}</div>\n            </div>\n        </div>\n    );\n}","import React from 'react'\nimport {Message} from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'The Beatles',\n    message: 'Is there anybody going to listen to my story? All about the girl who came to stay. ' +\n        'She\\'s a kind of girl you want so much. It makes you sorry still you don\\'t regret a single day',\n    time: '20.08.2021 22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport styles from './Affairs.module.css'\n\nexport type AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <li className={styles.affair}\n            onClick={deleteCallback}>\n            {props.affair.name}\n            <hr/>\n            {props.affair.priority}\n        </li>\n    )\n}\n\nexport default Affair\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = className || ''\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}","import React, {Dispatch, SetStateAction} from 'react'\nimport Affair, {AffairPropsType} from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport styles from './Affairs.module.css'\nimport {SuperButton} from './SuperButton'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: AffairPropsType['deleteAffairCallback']\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a:AffairType) => (\n        <Affair\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div id={styles.wrapper}>\n            <ul className={styles.affairs}>\n                {mappedAffairs}\n            </ul>\n            <div className={styles.btns}>\n                <SuperButton className={styles.btn} onClick={setAll}>All</SuperButton>\n                <SuperButton className={styles.btn} onClick={setHigh}>High</SuperButton>\n                <SuperButton className={styles.btn} onClick={setMiddle}>Middle</SuperButton>\n                <SuperButton className={styles.btn} onClick={setLow}>Low</SuperButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') {\n        return affairs\n    } else {\n        return affairs.filter((affair) => {\n            return affair.priority === filter;\n        });\n    }\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter((affair) => {\n        return affair._id !== _id;\n    });\n    // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport styles from './Greeting.module.css'\nimport {SuperButton} from './../h2/SuperButton'\nimport SuperInput from \"./SuperInput\";\n\n// types\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: boolean\n    totalUsers: number\n}\n\n// components\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n\n    // styles\n    const errorStyle = {\n        border: error ? '1px solid red' : 'none',\n    }\n\n    // callbacks\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            addUser()\n        }\n    }\n\n\n    // return\n    return (\n        <div id={styles.container}>\n            <div className={styles.field}>\n                <div className={styles.inputLine}>\n\n                    {/*\n                    Я оценил универсальность компоненты SuperInput, но\n                    стили уже были заточены под другую структуру. Поэтому в\n                    этом ДЗ использовать её не буду, а вот в последующих - да\n\n                    <SuperInput value={name} placeholder={'Whi is your name?'}\n                                onChange={setNameCallback}\n                                onKeyPress={onKeyPressHandler}\n                                style={errorStyle}/>*/}\n                    <input value={name}\n                    placeholder={'What is your name?'}\n                    onChange={setNameCallback}\n                    onKeyPress={onKeyPressHandler}\n                    style={errorStyle}/>\n                    <div className={styles.line}></div>\n                </div>\n                <div className={styles.rest}>\n                    <span>{error}</span>\n                    <SuperButton style={errorStyle} onClick={addUser}>add</SuperButton>\n                    <hr/>\n                    <span>total users: {totalUsers} </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\n// types\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// components\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n\n    // initial states\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<boolean>(false)\n\n    // callbacks\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {\n        setName(event.currentTarget.value)\n    }\n    const addUser = () => {\n        if (name) {\n            addUserCallback(name)\n            setName('')\n            setError(false)\n            alert(`Hello, ${name}!`)\n        } else {\n            setError(true)\n        }\n    }\n\n    // return\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={users.length}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid'\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// components\nfunction HW3() {\n\n    // initial states\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    // callbacks\n    const addUserCallback = (name: string) => {\n        setUsers([...users, {_id: v1(), name: name}])\n    }\n\n    // return\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className ? className : s.superInput}`\n\n    return (\n        <label className={s.lbl}>\n            <input\n                type={'text '}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </label>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\n//components\nfunction HW4() {\n\n    //initial states\n    const [text, setText] = useState<string>('')\n    const [checked, setChecked] = useState<boolean>(false)\n    const error = text ? '' : 'error'\n\n    //callbacks\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n\n    }\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    //return\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    placeholder={'Enter something'}\n                    //spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue}\n                    placeholder={'Something else'}// проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route render={() => <Error404/>}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__3wSRS\",\"btn\":\"Affairs_btn__3qNLi\",\"btns\":\"Affairs_btns__2GO0b\",\"affairs\":\"Affairs_affairs__YBm8L\",\"affair\":\"Affairs_affair__2dBHf\"};"],"sourceRoot":""}